import React from "react";
import styled from "@emotion/styled";
/**
 * `<PricingCard>` ('pricing-card')
 * - [Open in Figma](https://figma.com/file/aPfdtNb1aGFIN9p05cmmVY?node-id=44:1495)
 * - [Open in Grida](https://code.grida.co/files/aPfdtNb1aGFIN9p05cmmVY?node=44:1495)
 * 
 * 
 * ---
 * @example
 * ```tsx
 * import React from "react";
 * 
 * export default function () {
 *   return (
 *     <>
 *       ðŸ‘‡ instanciate widget like below. ðŸ‘‡
 *       <PricingCard/>
 *     </>
 *   )
 * }
 * ```
 * ---
 * @params {any} props - this widget does not requires props. you can pass custom dynamic props to the widget as you want (on typescript, it will raise type check issues).
 * ---
 * @preview
 * ![](https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/21d81d9a-ef50-47eb-b11f-a2df71c51baf)
 * ---
 * @remarks
 * @see {@link https://grida.co/docs} for more information.
 * ---
 * Code generated by grida.co | engine 0.0.1 (Apache-2.0) | Generated code under CC0 (public domain) *This code is free to use, modify, and redistribute. (aknowledgment is not required)*
 * 
 * 
 * ![Made with Grida](https://bridged-service-static.s3.us-west-1.amazonaws.com/branding/logo/32.png)
 * <!-- Info: Please do not remove this comment unless intended. removing this section will break grida integrations. -->
 * <!-- grida.meta.widget_declaration | engine : 0.0.1 | source : figma://aPfdtNb1aGFIN9p05cmmVY/44:1495 -->
 */
export function PricingCard() {
  return (
    <RootWrapperPricingCard>
      <Content>
        <ReadingArea>
          <PriceArea>
            <Description>
              For Personal Projects
            </Description>
            <PriceContainer>
              <Price>
                $4
              </Price>
              <Unit>
                / Month
              </Unit>
            </PriceContainer>
          </PriceArea>
          <FeaturesArea>
            <PricelistFeatureItem>
              <IconsMdiCheck src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/f312da15-23a8-43fb-9ba4-d1d0dca4f337" />
              <FeatureName>
                Up to 500,000 requests per month
              </FeatureName>
            </PricelistFeatureItem>
            <PricelistFeatureItem>
              <IconsMdiCheck src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/be620016-38ce-46c8-90a0-7d93d27ef88f" />
              <FeatureName_0001>
                500GB Bandwidth
              </FeatureName_0001>
            </PricelistFeatureItem>
            <PricelistFeatureItem>
              <IconsMdiCheck src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/56513d48-07ad-497a-8366-e64c7cb02b78" />
              <FeatureName_0001>
                Unlimited Projects
              </FeatureName_0001>
            </PricelistFeatureItem>
            <PricelistFeatureItem>
              <IconsMdiCheck src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/81ce5eaa-6168-4227-98c1-77d8644d7d66" />
              <FeatureName_0001>
                No hourly request limit
              </FeatureName_0001>
            </PricelistFeatureItem>
            <PricelistFeatureItem>
              <IconsMdiCheck src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/1cf6dc50-f078-4092-9a9f-958af2528005" />
              <FeatureName_0001>
                Max 6mb per request
              </FeatureName_0001>
            </PricelistFeatureItem>
          </FeaturesArea>
        </ReadingArea>
        <ButtonAsButton>
          Get started
        </ButtonAsButton>
      </Content>
    </RootWrapperPricingCard>
  )
}

const RootWrapperPricingCard = styled.div`
	display: flex;
	justify-content: flex-start;
	flex-direction: row;
	align-items: flex-start;
	gap: 10px;
	box-shadow: 0px 4px 128px 32px rgba(0, 0, 0, 0.08);
	border-radius: 8px;
	min-height: 100vh;
	background-color: white;
	box-sizing: border-box;
	padding: 40px;
`;

const Content = styled.div`
	display: flex;
	justify-content: flex-start;
	flex-direction: column;
	align-items: flex-start;
	flex: 1;
	gap: 142px;
	width: 300px;
	box-sizing: border-box;
`;

const ReadingArea = styled.div`
	display: flex;
	justify-content: flex-start;
	flex-direction: column;
	align-items: flex-start;
	gap: 72px;
	align-self: stretch;
	box-sizing: border-box;
	flex-shrink: 0;
`;

const PriceArea = styled.div`
	display: flex;
	justify-content: flex-start;
	flex-direction: column;
	align-items: flex-start;
	gap: 36px;
	align-self: stretch;
	box-sizing: border-box;
	flex-shrink: 0;
`;

const Description = styled.span`
	color: black;
	text-overflow: ellipsis;
	font-size: 18px;
	font-family: "Helvetica Neue", sans-serif;
	font-weight: 400;
	line-height: 135%;
	text-align: left;
	align-self: stretch;
	flex-shrink: 0;
`;

const PriceContainer = styled.div`
	display: flex;
	justify-content: flex-start;
	flex-direction: row;
	align-items: center;
	gap: 16px;
	align-self: stretch;
	box-sizing: border-box;
	flex-shrink: 0;
`;

const Price = styled.span`
	color: black;
	text-overflow: ellipsis;
	font-size: 36px;
	font-family: "Helvetica Neue", sans-serif;
	font-weight: 500;
	line-height: 135%;
	text-align: left;
`;

const Unit = styled.span`
	color: rgba(109, 109, 109, 0.83);
	text-overflow: ellipsis;
	font-size: 21px;
	font-family: "Helvetica Neue", sans-serif;
	font-weight: 400;
	text-align: left;
`;

const FeaturesArea = styled.div`
	display: flex;
	justify-content: flex-start;
	flex-direction: column;
	align-items: flex-start;
	gap: 16px;
	align-self: stretch;
	box-sizing: border-box;
	flex-shrink: 0;
`;

const PricelistFeatureItem = styled.div`
	display: flex;
	justify-content: flex-start;
	flex-direction: row;
	align-items: center;
	gap: 8px;
	align-self: stretch;
	box-sizing: border-box;
	flex-shrink: 0;
`;

const IconsMdiCheck = styled.img`
	width: 24px;
	height: 24px;
	object-fit: cover;
`;

const FeatureName = styled.span`
	color: rgb(83, 83, 83);
	text-overflow: ellipsis;
	font-size: 16px;
	font-family: "Helvetica Neue", sans-serif;
	font-weight: 400;
	text-align: left;
	width: 268px;
	flex: 1;
`;

const FeatureName_0001 = styled.span`
	color: rgb(83, 83, 83);
	text-overflow: ellipsis;
	font-size: 16px;
	font-family: "Helvetica Neue", sans-serif;
	font-weight: 400;
	text-align: left;
	width: 270px;
	flex: 1;
`;

const ButtonAsButton = styled.button`
	background-color: black;
	border: solid 1px rgb(28, 28, 28);
	border-radius: 4px;
	padding: 12px 89px;
	color: white;
	font-size: 18px;
	font-family: "Helvetica Neue", sans-serif;
	font-weight: 700;
	outline: none;
	cursor: pointer;
	align-self: stretch;
	flex-shrink: 0;

	:hover {
		opacity: 0.8;
	}

	:disabled {
		opacity: 0.5;
	}

	:active {
		opacity: 1;
	}

	:focus {}
`;

